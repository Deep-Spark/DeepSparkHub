# This is the configuration file for yesno dataset.
# Note that this configuration is just for debugging.

###########################################################
#                FEATURE EXTRACTION SETTING               #
###########################################################
sampling_rate: 8000      # Sampling rate.
fft_size: 1024           # FFT size.
hop_size: 256            # Hop size.
win_length: null         # Window length.
                         # If set to null, it will be the same as fft_size.
window: "hann"           # Window function.
num_mels: 80             # Number of mel basis.
fmin: 80                 # Minimum freq in mel basis calculation.
fmax: 3800               # Maximum frequency in mel basis calculation.
global_gain_scale: 1.0   # Will be multiplied to all of waveform.
trim_silence: true       # Whether to trim the start and end of silence.
trim_threshold_in_db: 20 # Need to tune carefully if the recording is not good.
trim_frame_size: 1024    # Frame size in trimming.
trim_hop_size: 256       # Hop size in trimming.
format: "hdf5"           # Feature file format. "npy" or "hdf5" is supported.

###########################################################
#         GENERATOR NETWORK ARCHITECTURE SETTING          #
###########################################################
generator_type: HiFiGANGenerator
generator_params:
    in_channels: 80                       # Number of input channels.
    out_channels: 1                       # Number of output channels.
    channels: 32                          # Number of initial channels.
    kernel_size: 7                        # Kernel size of initial and final conv layers.
    upsample_scales: [8, 8, 2, 2]         # Upsampling scales.
    upsample_kernel_sizes: [16, 16, 4, 4] # Kernel size for upsampling layers.
    resblock_kernel_sizes: [3, 7, 11]     # Kernel size for residual blocks.
    resblock_dilations:                   # Dilations for residual blocks.
        - [1, 3, 5]
        - [1, 3, 5]
        - [1, 3, 5]
    use_additional_convs: true            # Whether to use additional conv layer in residual blocks.
    bias: true                            # Whether to use bias parameter in conv.
    nonlinear_activation: "LeakyReLU"     # Nonlinear activation type.
    nonlinear_activation_params:          # Nonlinear activation paramters.
        negative_slope: 0.1
    use_weight_norm: true                 # Whether to apply weight normalization.

###########################################################
#       DISCRIMINATOR NETWORK ARCHITECTURE SETTING        #
###########################################################
discriminator_type: HiFiGANMultiScaleMultiPeriodDiscriminator
discriminator_params:
    scales: 2                             # Number of multi-scale discriminator.
    scale_downsample_pooling: "AvgPool1d" # Pooling operation for scale discriminator.
    scale_downsample_pooling_params:
        kernel_size: 4                    # Pooling kernel size.
        stride: 2                         # Pooling stride.
        padding: 2                        # Padding size.
    scale_discriminator_params:
        in_channels: 1                    # Number of input channels.
        out_channels: 1                   # Number of output channels.
        kernel_sizes: [15, 41, 5, 3]      # List of kernel sizes.
        channels: 16                      # Initial number of channels.
        max_downsample_channels: 32       # Maximum number of channels in downsampling conv layers.
        max_groups: 16                    # Maximum number of groups in downsampling conv layers.
        bias: true
        downsample_scales: [4, 4, 4, 4]   # Downsampling scales.
        nonlinear_activation: "LeakyReLU" # Nonlinear activation.
        nonlinear_activation_params:
            negative_slope: 0.1
    follow_official_norm: true            # Whether to follow the official norm setting.
    periods: [2, 3]                       # List of period for multi-period discriminator.
    period_discriminator_params:
        in_channels: 1                    # Number of input channels.
        out_channels: 1                   # Number of output channels.
        kernel_sizes: [5, 3]              # List of kernel sizes.
        channels: 32                      # Initial number of channels.
        downsample_scales: [4, 4, 4, 4]   # Downsampling scales.
        max_downsample_channels: 32       # Maximum number of channels in downsampling conv layers.
        bias: true                        # Whether to use bias parameter in conv layer."
        nonlinear_activation: "LeakyReLU" # Nonlinear activation.
        nonlinear_activation_params:      # Nonlinear activation paramters.
            negative_slope: 0.1
        use_weight_norm: true             # Whether to apply weight normalization.
        use_spectral_norm: false          # Whether to apply spectral normalization.

###########################################################
#                   STFT LOSS SETTING                     #
###########################################################
use_stft_loss: false
use_mel_loss: true
generator_adv_loss_params:
    average_by_discriminators: false # Whether to average loss by #discriminators.
discriminator_adv_loss_params:
    average_by_discriminators: false # Whether to average loss by #discriminators.
use_feat_match_loss: true
feat_match_loss_params:
    average_by_discriminators: false # Whether to average loss by # discriminators.
    average_by_layers: false         # Whether to average loss by # layers in each discriminator.
    include_final_outputs: true      # Whether to include final outputs in feat match loss calculation.

###########################################################
#               ADVERSARIAL LOSS SETTING                  #
###########################################################
lambda_aux: 45.0       # Loss balancing coefficient for STFT loss.
lambda_adv: 1.0        # Loss balancing coefficient for adversarial loss.
lambda_feat_match: 2.0 # Loss balancing coefficient for feat match loss..

###########################################################
#                  DATA LOADER SETTING                    #
###########################################################
batch_size: 2               # Batch size.
batch_max_steps: 4096       # Length of each audio in batch. Make sure dividable by hop_size.
pin_memory: true            # Whether to pin memory in Pytorch DataLoader.
num_workers: 2              # Number of workers in Pytorch DataLoader.
remove_short_samples: false # Whether to remove samples the length of which are less than batch_max_steps.
allow_cache: true           # Whether to allow cache in dataset. If true, it requires cpu memory.

###########################################################
#             OPTIMIZER & SCHEDULER SETTING               #
###########################################################
generator_optimizer_type: AdamW
generator_optimizer_params:
    lr: 0.0002            # Generator's learning rate.
    betas: [0.8, 0.99]    # Generator's optimizer beta
    weight_decay: 0.0     # Generator's weight decay coefficient.
generator_scheduler_type: ExponentialLR
generator_scheduler_params:
    gamma: 0.999           # Generator's scheduler gamma.
generator_grad_norm: -1    # Generator's gradient norm.
discriminator_optimizer_type: AdamW
discriminator_optimizer_params:
    lr: 0.0002            # Discriminator's learning rate.
    betas: [0.8, 0.99]    # Discriminator's optimizer beta
    weight_decay: 0.0     # Discriminator's weight decay coefficient.
discriminator_scheduler_type: ExponentialLR
discriminator_scheduler_params:
    gamma: 0.999            # Discriminator's scheduler gamma.
discriminator_grad_norm: -1 # Discriminator's gradient norm.

###########################################################
#                    INTERVAL SETTING                     #
###########################################################
generator_train_start_steps: 5     # Number of steps to start to train discriminator.
discriminator_train_start_steps: 0 # Number of steps to start to train discriminator.
train_max_steps: 10                # Number of training steps.
save_interval_steps: 5             # Interval steps to save checkpoint.
eval_interval_steps: 5             # Interval steps to evaluate the network.
log_interval_steps: 5              # Interval steps to record the training log.

###########################################################
#                     OTHER SETTING                       #
###########################################################
num_save_intermediate_results: 4  # Number of results to be saved as intermediate results.
